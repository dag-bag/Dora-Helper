/** @format */

import type { GetServerSideProps, NextPage, NextPageContext } from "next";
import Head from "next/head";

import connector from "../libs/connector";

import Category from "../Models/Category";

import Card2 from "../components/Card2";
import { QueryClient, useQuery, dehydrate } from "@tanstack/react-query";
import { fetchCategories } from "../libs/pageData";

const Home = () => {
  const {
    data: categories,
    isLoading,
    error,
  } = useQuery(["category"], fetchCategories);
  if (isLoading) {
    return (
      <div className="text-5xl font-bold my-4 text-center h-[80vh] flex justify-center items-center">
        Loading...
      </div>
    );
  }

  if (error) {
    return (
      <h1 className="text-5xl font-bold my-4 text-center h-[80vh] flex justify-center items-center">
        Something went wrong
      </h1>
    );
  }

  return (
    <>
      <Head>
        <title>Doraemon Code Helper</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="grid grid-cols-3 max-w-7xl m-auto gap-5 mt-10 overflow-hidden overflow-y-scroll max-h-[30rem] scrollbar-hide">
        {/* <Card2 /> */}
        {categories?.map((item: any, index: number) => {
          const { name, subCategories, components } = item;
          console.log(subCategories);

          return (
            <Card2
              key={index}
              category={name}
              subCategory={subCategories}
              components={components?.length}
            />
          );
        })}
      </main>
    </>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
  // await connector();

  const queryClient = new QueryClient();
  // const category = await fetchCategories();
  await queryClient.prefetchQuery(["category"], fetchCategories);

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};
